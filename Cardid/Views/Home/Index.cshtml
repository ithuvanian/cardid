
@using Cardid.Models
@model Stats
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@if (TempData["new-user"] != null)
{
    <div class="view-header">
        <div>
            <h2 class="view-title">Welcome, @TempData["new-user"].ToString()</h2>
            <p>
                Here's how you can get started:
            </p>
        </div>
        <div>
            <p>
                &#9679; @Html.ActionLink(HttpUtility.HtmlDecode("&#9679;") + " Create some cards", "CreateCardInit", "Card", new { @class = "link-inline-dark" })
            </p>
            <p>
                &#9679; @Html.ActionLink(HttpUtility.HtmlDecode("&#9679;") + " Create a new deck", "CreateDeckInit", "Deck", new { @class = "link-inline-dark" })
            </p>
            <p>
                &#9679; @Html.ActionLink(HttpUtility.HtmlDecode("&#9679;") + " View and study decks that other users have shared", "Index", "Deck", new { @class = "link-inline-dark" })
            </p>
        </div>
    </div>
}
else if (TempData["user-login"] != null)
{
    User user = TempData["user-login"] as User;

    <div class="home-header">
        <div class="home-headcolumn">
            <h3 class="bold">Welcome back, @user.DisplayName</h3>
            <p>
                You currently have
                <strong> @user.Cards().Count </strong>cards, and
                <strong> @user.Decks().Count </strong>decks, and have logged
                <strong> @user.Sessions().Count </strong>study sessions.
            </p>
        </div>
        <div class="home-headcolumn">
            <p>
                @Html.ActionLink(HttpUtility.HtmlDecode("&#9679;") + " Create some cards", "CreateCardInit", "Card", null, new { @class = "link-inline-dark" })
            </p>
            <p>
                @Html.ActionLink(HttpUtility.HtmlDecode("&#9679;") + " Create a new deck", "CreateDeckInit", "Deck", null, new { @class = "link-inline-dark" })
            </p>
            <p>
                @Html.ActionLink(HttpUtility.HtmlDecode("&#9679;") + " View and study decks that other users have shared", "Index", "Deck", null, new { @class = "link-inline-dark" })
            </p>
        </div>
    </div>
}



<div class="flex flex-baseline">

    @if (Session["userid"] != null)
    {
        <div class="home-column">
            <h2 class="view-title">Most Active Users</h2>
            <span class="small-type">
                by study sessions logged
            </span>
            @foreach (KeyValuePair<string, int> kvp in Model.ActiveUsers)
            {
                <p>
                    <span class="left-span">
                        @kvp.Key
                    </span>
                    <span class="right-span">
                        @kvp.Value
                    </span>
                </p>
            }
        </div>


        <div class="home-column">
            <h2 class="view-title">Most Popular Decks</h2>
            <span class="small-type">
                by number of times studied
            </span>
            @foreach (KeyValuePair<Deck, int> kvp in Model.ActiveDecks)
            {
                Deck deck = kvp.Key;
                <p>
                    <span class="left-span">
                        @Html.ActionLink(deck.DeckName, "CardsInDeck", "Deck", new { deckID = deck.DeckID }, new { @class = "link-inline" })
                    </span>
                    <span class="right-span">
                        @kvp.Value
                    </span>
                </p>
            }
        </div>



        <div class="home-column">
            <h2 class="view-title">Most Popular Tags</h2>
            @foreach (KeyValuePair<Tag, int> kvp in Model.PopularTags)
            {
                <p>@kvp.Key.TagName / @kvp.Value</p>
            }
        </div>



    }
</div>