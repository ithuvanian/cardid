
@using Cardid.Models
@model Stats
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    int listLength = 0;
}


@if (TempData["new-user"] != null)
{
    <div class="home-header">
        <span class="icons large-type dark-hover x-button">
            &#xe904;
        </span>
        <div class="welcome-msg">
            <h3 class="bold near-top">Welcome, @TempData["new-user"].ToString()!</h3>
            <p>Here's how you can get started:</p>
            <p>
                @Html.ActionLink(HttpUtility.HtmlDecode("&#9679;") + "  Create a new deck", "CreateDeckInit", "Deck", null, new { @class = "dark-hover" })
            </p>
            <p>
                @Html.ActionLink(HttpUtility.HtmlDecode("&#9679;") + "  View and study decks that other users have shared", "Index", "Deck", null, new { @class = "dark-hover" })
            </p>
        </div>
    </div>
}
else if (TempData["user-login"] != null)
{
    User user = TempData["user-login"] as User;

    <div class="home-header">
        <span class="icons large-type dark-hover x-button">
            &#xe904;
        </span>
        <div class="welcome-msg">
            <h3 class="bold near-top">Welcome back, @user.DisplayName!</h3>
            <p>
                You currently have
                <strong> @user.Cards().Count </strong>cards, and
                <strong> @user.Decks().Count </strong>decks.
            </p>
            @if (user.Sessions().Count > 0)
            {
                <p>
                    You've logged
                    <strong> @user.Sessions().Count </strong>study sessions.&nbsp;&nbsp;
                    @Html.ActionLink("Click here to study some more", "Index", "Deck", null, new { @class = "bold dark-hover" })
                </p>
            }
            else
            {
                <p>
                    No study sessions yet -&nbsp;&nbsp;
                    @Html.ActionLink("  Click here to get started", "Index", "Deck", null, new { @class = "bold dark-hover" })
                </p>
            }
        </div>
    </div>
}



<div class="flex flex-baseline list-container-short">

    @if (Session["userid"] != null)
    {
        <div class="leaderboard">
            <h2 class="view-title">Most Active Users</h2>
            <p class="small-type at-top">
                by study sessions logged:
            </p>
            <div class="leaderboard-list">
                @{
                    listLength = Math.Min(10, Model.ActiveUsers.Count);
                    for (int i = 0; i < listLength; i++)
                    {
                        string name = Model.ActiveUsersOrder[i];

                        <p class="leaderboard-listing">
                            <span class="listing-left">
                                @name
                            </span>
                            <span class="listing-right">
                                @Model.ActiveUsers[name]
                            </span>
                        </p>
                    }
                }
            </div>
            <span class="leaderboard-expand small-type dark-hover">
                Show more
                <span class="icons">
                    &#xe931;
                </span>
            </span>
        </div>


        <div class="leaderboard">
            <h2 class="view-title">Most Popular Decks</h2>
            <p class="small-type at-top">
                by number of times studied:
            </p>
            <div class="leaderboard-list">
                @{
                    listLength = Math.Min(10, Model.ActiveDecks.Count);
                    for (int i = 0; i < listLength; i++)
                    {
                        Deck deck = Model.ActiveDecksOrder[i];
                        <p class="leaderboard-listing">
                            <span class="listing-left">
                                @Html.ActionLink(deck.DeckName, "ViewDeck", "Deck", new { deckID = deck.DeckID }, new { @class = "link-inline" })
                            </span>
                            <span class="listing-right">
                                @Model.ActiveDecks[deck]
                            </span>
                        </p>
                    }
                }
            </div>
            <span class="leaderboard-expand small-type dark-hover">
                Show more
                <span class="icons">
                    &#xe931;
                </span>
            </span>
        </div>


        <div class="leaderboard">
            <h2 class="view-title">Most Popular Tags</h2>
            <p class="small-type at-top">
                by number of decks:
            </p>
            <div class="leaderboard-list">
                @{
                    listLength = Math.Min(10, Model.PopularTags.Count);

                    for (int i = 0; i < listLength; i++)
                    {
                        Tag tag = Model.PopularTagsOrder[i];
                        <p class="leaderboard-listing">
                            <span class="listing-left">
                                @Html.ActionLink(tag.TagName, "SearchDeckTags", "Deck", new { searchString = tag.TagName }, new { @class = "link-inline" })
                            </span>
                            <span class="listing-right">
                                @Model.PopularTags[tag]
                            </span>
                        </p>
                    }
                }
            </div>
            <span class="leaderboard-expand small-type dark-hover">
                Show more
                <span class="icons">
                    &#xe931;
                </span>
            </span>
        </div>


        <div class="tag-leaderboard">
            <h2 class="view-title">Most Popular Tags</h2>
            <p class="small-type at-top">
                by number of decks:
            </p>
            <div class="leaderboard-list">
                @{
                    listLength = Math.Min(10, Model.PopularTags.Count);

                    for (int i = 0; i < listLength; i++)
                    {
                        Tag tag = Model.PopularTagsOrder[i];
                        <p class="leaderboard-listing">
                            <span class="tag-listing-left">
                                @Html.ActionLink(tag.TagName, "SearchDeckTags", "Deck", new { searchString = tag.TagName }, new { @class = "link-inline" })
                            </span>
                            <span class="tag-listing-right">
                                @Model.PopularTags[tag]
                            </span>
                        </p>
                    }
                }
            </div>
            <span class="leaderboard-expand small-type dark-hover">
                Show more
                <span class="icons">
                    &#xe931;
                </span>
            </span>
        </div>

    }
</div>


<div class="flex flex-baseline list-container-long hidden">

    @if (Session["userid"] != null)
    {
        <div class="leaderboard">
            <h2 class="view-title">Most Active Users</h2>
            <p class="small-type at-top">
                by study sessions logged:
            </p>
            <div class="leaderboard-list">
                @{
                    listLength = Math.Min(25, Model.ActiveUsers.Count);
                    for (int i = 0; i < listLength; i++)
                    {
                        string name = Model.ActiveUsersOrder[i];

                        <p class="leaderboard-listing">
                            <span class="listing-left">
                                @name
                            </span>
                            <span class="listing-right">
                                @Model.ActiveUsers[name]
                            </span>
                        </p>
                    }
                }
            </div>
            <span class="leaderboard-collapse small-type dark-hover">
                Show less
                <span class="icons">
                    &#xe934;
                </span>
            </span>
        </div>


        <div class="leaderboard">
            <h2 class="view-title">Most Popular Decks</h2>
            <p class="small-type at-top">
                by number of times studied:
            </p>
            <div class="leaderboard-list">
                @{
                    listLength = Math.Min(25, Model.ActiveDecks.Count);
                    for (int i = 0; i < listLength; i++)
                    {
                        Deck deck = Model.ActiveDecksOrder[i];
                        <p class="leaderboard-listing">
                            <span class="listing-left">
                                @Html.ActionLink(deck.DeckName, "ViewDeck", "Deck", new { deckID = deck.DeckID }, new { @class = "link-inline" })
                            </span>
                            <span class="listing-right">
                                @Model.ActiveDecks[deck]
                            </span>
                        </p>
                    }
                }
            </div>
            <span class="leaderboard-collapse small-type dark-hover">
                Show less
                <span class="icons">
                    &#xe934;
                </span>
            </span>
        </div>


        <div class="leaderboard">
            <h2 class="view-title">Most Popular Tags</h2>
            <p class="small-type at-top">
                by number of decks:
            </p>
            <div class="leaderboard-list">
                @{
                    listLength = Math.Min(25, Model.PopularTags.Count);

                    for (int i = 0; i < listLength; i++)
                    {
                        Tag tag = Model.PopularTagsOrder[i];
                        <p class="leaderboard-listing">
                            <span class="listing-left">
                                @Html.ActionLink(tag.TagName, "SearchDeckTags", "Deck", new { searchString = tag.TagName }, new { @class = "link-inline" })
                            </span>
                            <span class="listing-right">
                                @Model.PopularTags[tag]
                            </span>
                        </p>
                    }
                }
            </div>
            <span class="leaderboard-collapse small-type dark-hover">
                Show less
                <span class="icons">
                    &#xe934;
                </span>
            </span>
        </div>


        <div class="tag-leaderboard">
            <h2 class="view-title">Most Popular Tags</h2>
            <p class="small-type at-top">
                by number of decks:
            </p>
            <div class="leaderboard-list">
                @{
                    listLength = Math.Min(25, Model.PopularTags.Count);

                    for (int i = 0; i < listLength; i++)
                    {
                        Tag tag = Model.PopularTagsOrder[i];
                        <p class="leaderboard-listing">
                            <span class="tag-listing-left">
                                @Html.ActionLink(tag.TagName, "SearchDeckTags", "Deck", new { searchString = tag.TagName }, new { @class = "link-inline" })
                            </span>
                            <span class="tag-listing-right">
                                @Model.PopularTags[tag]
                            </span>
                        </p>
                    }
                }
            </div>
            <span class="leaderboard-collapse small-type dark-hover">
                Show less
                <span class="icons">
                    &#xe934;
                </span>
            </span>
        </div>

    }
</div>



<script>

    $(document).ready(function () {
        $('.leaderboard-expand').on('click', function () {
            $('.list-container-short').addClass('hidden');
            $('.list-container-long').removeClass('hidden');
        });
        $('.leaderboard-collapse').on('click', function () {
            $('.list-container-long').addClass('hidden');
            $('.list-container-short').removeClass('hidden');
        });
        $('.x-button').on('click', function () {
            $('.home-header').slideUp(250);
        });
    });

</script>