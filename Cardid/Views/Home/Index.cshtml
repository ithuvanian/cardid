
@using Cardid.Models
@model Stats
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@if (TempData["new-user"] != null)
{
    <div class="home-header">
        <div class="home-headcolumn align-right">
            <p class="bold large-type">Welcome, @TempData["new-user"].ToString()!</p>
            <p>Here's how you can get started:</p>
        </div>
        <div class="home-headcolumn">
            <p>
                @Html.ActionLink(HttpUtility.HtmlDecode("&#9679;") + " Create a new deck", "CreateDeckInit", "Deck", new { @class = "link-inline-dark" })
            </p>
            <p>
                @Html.ActionLink(HttpUtility.HtmlDecode("&#9679;") + " View and study decks that other users have shared", "Index", "Deck", new { @class = "link-inline-dark" })
            </p>
        </div>
    </div>
}
else if (TempData["user-login"] != null)
{
    User user = TempData["user-login"] as User;

    <div class="home-header">
        <div class="home-headcolumn">
            <h3 class="bold">Welcome back, @user.DisplayName</h3>
            <p>
                You currently have
                <strong> @user.Cards().Count </strong>cards, and
                <strong> @user.Decks().Count </strong>decks, and have logged
                <strong> @user.Sessions().Count </strong>study sessions.
            </p>
        </div>
        <div class="home-headcolumn">
            <p>
                @Html.ActionLink(HttpUtility.HtmlDecode("&#9679;") + " Create a new deck", "CreateDeckInit", "Deck", null, new { @class = "link-inline-dark" })
            </p>
            <p>
                @Html.ActionLink(HttpUtility.HtmlDecode("&#9679;") + " View and study decks", "Index", "Deck", null, new { @class = "link-inline-dark" })
            </p>
        </div>
    </div>
}



<div class="flex flex-baseline">

    @if (Session["userid"] != null)
    {
        <div class="leaderboard">
            <h2 class="view-title">Most Active Users</h2>
            <p class="small-type">
                by study sessions logged:
            </p>
            <div class="leaderboard-list">
                @foreach (KeyValuePair<string, int> kvp in Model.ActiveUsers)
                {
                    <p class="leaderboard-listing">
                        <span class="listing-left">
                            @kvp.Key
                        </span>
                        <span class="listing-right">
                            @kvp.Value
                        </span>
                    </p>
                }
            </div>
        </div>


        <div class="leaderboard">
            <h2 class="view-title">Most Popular Decks</h2>
            <p class="small-type">
                by number of times studied:
            </p>
            <div class="leaderboard-list">
                @foreach (KeyValuePair<Deck, int> kvp in Model.ActiveDecks)
                {
                    Deck deck = kvp.Key;
                    <p class="leaderboard-listing">
                        <span class="listing-left">
                            @Html.ActionLink(deck.DeckName, "ViewDeck", "Deck", new { deckID = deck.DeckID }, new { @class = "link-inline" })
                        </span>
                        <span class="listing-right">
                            @kvp.Value
                        </span>
                    </p>
                }
            </div>
        </div>


        <div class="leaderboard">
            <h2 class="view-title">Most Popular Tags</h2>
            <p class="small-type">
                by number of decks:
            </p>
            <div class="leaderboard-list">
                @foreach (KeyValuePair<Tag, int> kvp in Model.PopularTags)
                {
                    <p class="leaderboard-listing">
                        <span class="listing-left">
                            @Html.ActionLink(kvp.Key.TagName, "SearchDeckTags", "Deck", new { searchString = kvp.Key.TagName }, new { @class = "link-inline" })
                        </span>
                        <span class="listing-right">
                            @kvp.Value
                        </span>
                    </p>
                }
            </div>
        </div>


        <div class="tag-leaderboard">
            <h2 class="view-title">Most Popular Tags</h2>
            <p class="small-type">
                by number of decks:
            </p>
            <div class="leaderboard-list">
                @foreach (KeyValuePair<Tag, int> kvp in Model.PopularTags)
                {
                    <div class="tag-listing">
                        <span class="tag-listing-left">
                            @Html.ActionLink(kvp.Key.TagName, "SearchDeckTags", "Deck", new { searchString = kvp.Key.TagName }, new { @class = "link-inline" })
                        </span>
                        <span class="tag-listing-right">
                            @kvp.Value
                        </span>
                    </div>
                }
            </div>
        </div>



    }
</div>