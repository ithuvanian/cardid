
@using Cardid.Models
@model Card
@{
    ViewBag.Title = "EditCard";
}


<h1 class="view-title">Edit card</h1>

<div class="flex flex-baseline">


    <div class="card-bothsides">

        @using (Html.BeginForm("EditCardSubmit", "Card", FormMethod.Post))
        {
            @Html.HiddenFor(m => m.CardID)
            @Html.HiddenFor(m => m.CurrentDeckID)
            @Html.HiddenFor(m => m.CurrentSearchString)
            <div class="edit-field">
                @Html.LabelFor(m => m.Front, "Front of Card:")
                @Html.TextAreaFor(m => m.Front, new { @class = "submit-change" })
            </div>
            <div class="edit-field">
                @Html.LabelFor(m => m.Back, "Back of Card:")
                @Html.TextAreaFor(m => m.Back, new { @class = "submit-change" })
            </div>
        }

        @if (Model.CurrentDeckID != null)
        {

            <a href="@Url.Action("EditDeck", "Deck", new { deckID = Model.CurrentDeckID })" class="btn main-btn">
                <span class="icons">
                    &#xe932;&nbsp;
                </span>
                Return to deck
            </a>
        }
        else if (Model.CurrentSearchString != null)
        {
            <a href="@Url.Action("SearchText", "Home", new { searchString = Model.CurrentSearchString })" class="btn main-btn">
                <span class="icons">
                    &#xe932;
                </span>
                Back to search results 
            </a>
        }

        <p class="small-type at-top">All changes saved automatically</p>

        <a href="@Url.Action("DeleteCard", "Card", new { cardID = Model.CardID })" class="btn delete-btn">
            <span class="icons">
                &#xe914;
            </span>
            <span class="tab"></span>
            Delete this card
        </a>

    </div>


</div>


<script type="text/javascript" src="../../Content/cardScript.js"></script>



