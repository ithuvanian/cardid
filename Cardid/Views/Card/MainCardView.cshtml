@using Cardid.Models
@model List<Card>
@{
    ViewBag.Title = "MainCardView";
    int userDecksCount = ViewBag.DecksCount;
}



@if (ViewBag.SearchString == null)
{
    <h1 class="view-title">All Your Cards</h1>
}
else
{
    <h1 class="view-title">Search Results</h1>
}

<div class="flex flex-left">

    <div class="card-column">

        <div class="option">
            @Html.ActionLink("Create a new card", "CreateCardInit", "Card", null, new { @class = "btn main-btn" })
        </div>

        <div class="option">
            @using (Html.BeginForm("SearchCards", "Card", null, FormMethod.Get, new { @class = "vertical-form" }))
            {
                <div>
                    <input type="text" name="searchString" />
                </div>
                <div>
                    <button type="submit" class="btn main-btn">Search for text in cards</button>
                </div>
            }
        </div>
    </div>
</div>


@if (ViewBag.SearchString != null)
{
    <div class="container-header">

        @if (Model.Count > 0)
        {
            <h1 class="view-title">Search results for "@ViewBag.SearchString":</h1>
        }
        else
        {
            <h4 class="bold">No cards found containing "@ViewBag.SearchString"</h4>
        }
        @Html.ActionLink("View all your cards", "Index", "Card", null, new { @class = "btn main-btn" })
    </div>
}


<div class="flex flex-left">

    @if (Model.Count == 0)
    {
        if (ViewBag.SearchString == null)
        {
            <div>You currently have no cards.</div>
        }
    }
    else
    {
        foreach (Card thisCard in Model)
        {
            <div class="card-bothsides">
                <div class="card-field">@thisCard.Front</div>
                <div class="card-field">@thisCard.Back</div>
                <div class="card-options">
                    @Html.ActionLink("Edit", "EditCardInit", "Card", new { cardID = thisCard.CardID }, new { @class = "btn float-left card-button" })
                    @if (userDecksCount > thisCard.Decks().Count)
                    {
                        @Html.ActionLink("Add to decks", "ChooseDecksInit", "Deck", new { cardID = thisCard.CardID }, new { @class = "btn float-right card-button" })
                    }
                </div>
                <div class="card-decks">
                    @for (int i = 0; i < thisCard.Decks().Count; i++)
                    {
                        <p class="small-type">Currently in:</p>
                        Deck deck = thisCard.Decks()[i];
                        @Html.ActionLink(deck.DeckName, "EditDeck", "Deck", new { deckId = deck.DeckID }, new { @class = "deck-incard" })
                    }
                </div>
            </div>
        }
    }
</div>












