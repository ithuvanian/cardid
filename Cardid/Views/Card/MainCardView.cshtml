@using Cardid.Models
@model List<Card>
@{
    ViewBag.Title = "MainCardView";
    int userDecksCount = ViewBag.DecksCount;
}

@if (TempData["loginname"] != null)
{
    <div>Thank you for logging in, @TempData["loginname"]</div>
}

<div class="flex flex-center">

    <div class="option">

        @using (Html.BeginForm("SearchCards", "Card"))
        {
            <input type="text" name="searchString" />
            <button type="submit" class="btn main-btn">Search for text in cards</button>
        }
    </div>

    <div class="option">

        @Html.ActionLink("Create a new card", "CreateCardInit", "Card", null, new { @class = "btn main-btn" })

    </div>
</div>

<div class="flex flex-center">
    <div class="container-header">

        @if (ViewBag.SearchString != null)
        {
            if (Model.Count > 0)
            {
                <h1 class="title-font">Search results for "@ViewBag.SearchString":</h1>
            }
            else
            {
                <h4 class="bold">No cards found containing "@ViewBag.SearchString"</h4>
            }
            @Html.ActionLink("View all your cards", "Index", "Card", null, new { @class = "btn main-btn" })
        }
        else
        {
            <h1 class="title-font">All Your Cards</h1>
        }
    </div>

    <div class="card-container">

        @if (Model.Count == 0)
        {
            if (ViewBag.SearchString == null)
            {
                <div>You currently have no cards.</div>
            }
        }
        else
        {
            foreach (Card thisCard in Model)
            {
                <div class="card-bothsides">
                    <div class="front-field">@thisCard.Front</div>
                    <div class="back-field">@thisCard.Back</div>
                    <div>
                        @for (int i = 0; i < thisCard.Decks.Count; i++)
                        {
                            Deck deck = thisCard.Decks[i];
                            @Html.ActionLink(deck.Name, "EditDeck", "Deck", new { deckId = deck.DeckID }, new { @class = "cardview-deck" })
                        }
                    </div>
                    <div class="card-options">
                        @if (userDecksCount > thisCard.Decks.Count)
                        {
                            @Html.ActionLink("Add to a deck", "ChooseDecksInit", "Deck", new { cardID = thisCard.CardID }, new { @class = "btn card-button" })
                        }
                        @Html.ActionLink("Edit", "EditCardInit", "Card", new { cardID = thisCard.CardID }, new { @class = "btn float-right card-button" })
                    </div>
                </div>
            }
        }
    </div>

</div>











