@using Cardid.Models
@model Deck
@{
    ViewBag.Title = "Edit Deck: " + Model.DeckName;
}


<h2 class="view-title">
    Edit Your Deck
    <span class="tab"></span>
    <span class="icons">
        &#xe90e;
    </span>
    <span class="large-type">
        @Model.DeckName
    </span>
</h2>


<div class="flex flex-baseline">

    <div class="editdeck-left">

        @if (Model.Cards().Count > 0)
        {
            <div>
                <p class="at-top at-bottom">
                    <span class="icons">
                        &#xe915;
                    </span>
                    Study:
                </p>
                <div>
                    <a href="@Url.Action("StudyBegin", "Deck", new { deckID = Model.DeckID, frontFirst = true })" class="btn main-btn">
                        <span class="icons">
                            &#xe915;&nbsp;
                        </span>
                        Front first
                    </a>
                    <a href="@Url.Action("StudyBegin", "Deck", new { deckID = Model.DeckID, frontFirst = false })" class="btn main-btn">
                        <span class="icons">
                            &#xe915;&nbsp;
                        </span>
                        Back first
                    </a>
                </div>
            </div>
        }

        <div>

            @if (Model.IsPublic == false)
            {
                <p class="at-bottom">
                    <span class="icons">
                        &#xe910;
                    </span>
                    This deck is visible only to you.
                </p>
                <a href="@Url.Action("MakeDeckPublic", "Deck", new { deckID = Model.DeckID })" class="btn main-btn">
                    <span class="icons">&#xe911;</span>
                    <span class="tab"></span>
                    Make public
                </a>
            }
            else
            {
                <p class="at-bottom">
                    <span class="icons">
                        &#xe911;
                    </span>
                    This deck is visible to everyone.
                </p>
                <a href="@Url.Action("MakeDeckPrivate", "Deck", new { deckID = Model.DeckID })" class="btn main-btn">
                    <span class="icons">&#xe910;</span>
                    <span class="tab"></span>
                    Make private
                </a>
            }

        </div>

        <div>
            <div class="rename-init">
                <span class="btn main-btn">
                    <span class="icons">
                        &#xe90d;
                    </span>
                    <span class="tab"></span>
                    Rename deck
                </span>
            </div>

            <div class="rename-submit hidden">

                @using (Html.BeginForm("ChangeDeckName", "Deck"))
                {
                    <button type="submit" class="btn main-btn">
                        <span class="icons">
                            &#xe90d;
                        </span>
                        <span class="tab"></span>
                        Rename deck
                    </button>
                    @Html.HiddenFor(m => m.DeckID)
                    @Html.TextBoxFor(m => m.DeckName, new { @class = "popup" })
                }
            </div>

        </div>

        <div>
            <div class="btn delete-btn delete-init">
                <span class="icons">
                    &#xe914;
                </span>
                <span class="tab"></span>
                Delete This Deck
            </div>

            @using (Html.BeginForm("DeleteDeck", "Deck", new { deckID = Model.DeckID }, FormMethod.Post, new { @class = "delete-submit" }))
            {
                <span>Deleting a deck will also delete all cards that exist only in that deck. Continue?</span>
                <div>
                    <button type="reset" class="btn main-btn cancel-btn">
                        <span class="icons">
                            &#xe932;
                        </span>
                        &nbsp;Cancel
                    </button>
                    <button type="submit" class="btn delete-btn">
                        <span class="icons">
                            &#xe914;
                        </span>
                        Confirm Delete
                    </button>
                </div>
            }
        </div>

    </div>

    <div class="editdeck-right module">

        @if (Model.Tags().Count > 0)
        {
            <p class="at-top at-bottom">
                <span class="icons">
                    &#xe93d;&nbsp;
                </span>
                <span class="bold">
                    Tags
                </span>
            </p>
            <div class="tag-container">

                @foreach (Tag tag in Model.Tags())
                {
                    <span>
                        <span class="tag active-tag">@tag.TagName</span>
                        <a href="@Url.Action("RemoveDeckTag", "Deck", new { deckID = Model.DeckID, tagID = tag.TagID, newDeck = false })">
                            <span class="icons delete-tag">
                                &#xe904;
                            </span>
                        </a>
                        <span class="tab"></span>
                    </span>
                }

            </div>
        }

        <p class="at-bottom">
            <span class="icons">
                &#xe900;&nbsp;
            </span>
            <span class="bold">
                Add Tags
            </span>
        </p>

        <div class="deck-tags">

            <div class="tagviews">
                <span class="bold tagview-pop">
                    sort by popularity
                </span>
                <span class="icons pointer large-type toggle-left">
                    &#xe93e;
                </span>
                <span class="icons pointer large-type toggle-right hidden">
                    &#xe93f;
                </span>
                <span class="pointer tagview-alph">
                    sort alphabetically
                </span>
            </div>

            <div class="tag-container">
                <div class="tags-pop">

                    @foreach (Tag tag in Model.OtherTagsByPopularity())
                    {
                        @Html.ActionLink(tag.TagName, "AddDeckTag", "Deck", new { deckID = Model.DeckID, tagID = tag.TagID }, new { @class = "tag inactive-tag" });
                    }
                </div>

                <div class="tags-alph hidden">

                    @foreach (Tag tag in Model.OtherTagsByName())
                    {
                        @Html.ActionLink(tag.TagName, "AddDeckTag", "Deck", new { searchString = tag.TagName }, new { @class = "tag inactive-tag" });
                    }
                </div>
            </div>

        </div>

        <div>
            <h4 class="bold at-bottom">Create a new tag for this deck:</h4>

            @using (Html.BeginForm("CreateTagForDeck", "Deck", FormMethod.Post))
            {
                @Html.TextBoxFor(m => m.NewTag.TagName, new { @placeholder = "new tag name" })

                @Html.HiddenFor(m => Model.DeckID)

                <button type="submit" class="btn main-btn" style="margin:0;margin-left:1em">
                    <span class="icons">
                        &#xe900;
                    </span>
                    <span class="tab"></span>
                    Add tag
                </button>
            }

        </div>
    </div>

</div>



<div class="spacer"></div>
<h2 class="view-title">Cards:</h2>


<div class="flex flex-center">

    <div class="card-blank">
        <span class="bold small-type">Create a new card for this deck:</span>

        @using (Html.BeginForm("AddCardToDeck", "Card", new { deckID = Model.DeckID }, FormMethod.Post, null))
        {
            @Html.TextBoxFor(m => m.NewCardFront, new { placeholder = "front" })
            @Html.TextBoxFor(m => m.NewCardBack, new { placeholder = "back" })
            <div>
                <button type="submit" class="btn main-btn">
                    <span class="icons">
                        &#xe900;
                    </span>
                    <span class="tab"></span>
                    Add card
                </button>

            </div>
        }
    </div>

    @if (Model.Cards().Count != 0)
    {
        foreach (Card thisCard in Model.Cards())
        {
            <div class="card-bothsides">
                <div class="card-field">@thisCard.Front</div>
                <div class="card-field">@thisCard.Back</div>
                <a href="@Url.Action("EditCardInit", "Card", new { cardID = thisCard.CardID, deckID = Model.DeckID })" class="btn main-btn" id="edit-link">
                    <span class="icons">
                        &#xe90d;
                    </span>
                    <span class="tab"></span>
                    Edit this card
                </a>
                <a href="@Url.Action("RemoveCardFromDeck", "Card", new { cardID = thisCard.CardID, deckID = Model.DeckID })" class="btn main-btn">
                    <span class="icons">
                        &#xe914;
                    </span>
                    <span class="tab"></span>
                    Remove from deck
                </a>
            </div>
        }
    }


</div>





<script type="text/javascript" src="../../Content/deckTags.js"></script>
<script type="text/javascript" src="../../Content/cardView.js"></script>


