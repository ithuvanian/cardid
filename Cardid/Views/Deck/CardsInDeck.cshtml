@using Cardid.Models
@model Deck
@{
    ViewBag.Title = "CardsInDeck";
}

<h2 class="view-title">
    View Cards in Deck |
    <span class="large-type">
        @Model.DeckName
    </span>
</h2>

<p>This deck was shared by <strong>@Model.Creator().DisplayName</strong></p>

@if (Model.Tags().Count > 0)
{
    <div>
        <p class="at-bottom">Tags with this deck:</p>
        @foreach (Tag tag in Model.Tags())
        {
            @Html.ActionLink(tag.TagName, "SearchDeckTags", "Deck", new { searchString = tag.TagName }, new { @class = "tag active-tag" });
        }
    </div>
}

<div>
    @Html.ActionLink("Study front -> back", "StudyBegin", "Deck", new { deckID = Model.DeckID, frontFirst = true }, new { @class = "btn main-btn" })
    @Html.ActionLink("Study back -> front", "StudyBegin", "Deck", new { deckID = Model.DeckID, frontFirst = false }, new { @class = "btn main-btn" })
</div>

<div class="flex flex-left">
    @foreach (Card thisCard in Model.Cards())
    {
        <div class="card-bothsides">
            <div class="card-field">@thisCard.Front</div>
            <div class="card-field">@thisCard.Back</div>
            @Html.ActionLink("Add to a different deck", "ChooseOtherDeck", "Deck", new { cardID = thisCard.CardID }, new { @class = "btn card-button" })
        </div>
    }
</div>

