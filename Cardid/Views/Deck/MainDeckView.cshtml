@using Cardid.Models
@model List<Deck>
@{
    ViewBag.Title = "MainDeckView";
    List<Tag> tagsByName = ViewBag.TagsByName;
    List<Tag> tagsByPopularity = ViewBag.TagsByPopularity;
    string userID = ViewBag.UserID;
    bool userDecks = false;
    bool publicDecks = false;

    foreach (Deck deck in Model)
    {
        if (deck.UserID == userID)
        {
            userDecks = true;
        }
        if (deck.UserID != userID && deck.Cards.Count > 0)
        {
            publicDecks = true;
        }
    }
}



@if (ViewBag.SearchName != null)
{
    <h1 class="view-title">
        Search results for "@ViewBag.SearchName":
    </h1>
}

else if (ViewBag.SearchTag != null)
{
    <h2 class="view-title" : inline-block">
        <span class="icons large-type">
            &#xe93c;
        </span>
        <span class="half-tab"></span>
        Tag search results for:
        <span class="large-type">
            @ViewBag.SearchTag
        </span>
    </h2>
}

else
{
    <h1 class="view-title">All Decks</h1>
}


<div class="flex flex-baseline">
    <div class="deck-column">
        <div>
            @if (ViewBag.SearchName != null || ViewBag.SearchTag != null)
            {
                <div>
                    <a href="@Url.Action("ShowAllDecks", "Deck")" class="btn main-btn">
                        <span class="icons">
                            &#xe932;
                        </span>
                        <span class="tab"></span>
                        View all available decks
                    </a>
                </div>
            }

            <a href="@Url.Action("CreateDeckInit", "Deck")" , class="btn main-btn">
                <span class="icons">
                    &#xe900;
                </span>
                <span class="tab"></span>
                Create a new deck
            </a>

            @using (Html.BeginForm("SearchDeckNames", "Deck", FormMethod.Get, new { @class = "line-form" }))
            {
                <div class="btn inline-btn submit-btn">
                    <span class="icons">
                        &#xe90f;
                    </span>
                    <span class="tab"></span>
                    Search decks by name
                </div>
                <span class="half-tab"></span>
                <input type="text" name="searchString" placeholder="deck name" />
            }

        </div>

        <div class="option module">
            <p class="bold large-type at-top">Search decks by tag</p>

            <div class="tagviews small-type">
                <span class="pointer tagview-pop">
                    sort by popularity
                </span>
                <span class="icons pointer large-type toggle-left">
                    &#xe93e;
                </span>
                <span class="icons pointer large-type toggle-right hidden">
                    &#xe93f;
                </span>
                <span class="bold tagview-alph">
                    sort alphabetically
                </span>
            </div>

            <div class="tag-container">

                <div class="tags-pop hidden">

                    @foreach (Tag tag in tagsByPopularity)
                    {
                        @Html.ActionLink(tag.TagName, "SearchDeckTags", "Deck", new { searchString = tag.TagName }, new { @class = "tag search-tag" });
                    }
                </div>

                <div class="tags-alph">

                    @foreach (Tag tag in tagsByName)
                    {
                        @Html.ActionLink(tag.TagName, "SearchDeckTags", "Deck", new { searchString = tag.TagName }, new { @class = "tag search-tag" });
                    }
                </div>

            </div>

        </div>
    </div>


    <div class="deck-column">

        @if (Model.Count == 0 || (userDecks == false && publicDecks == false))
        {
            if (ViewBag.SearchName != null)
            {
                <div class="module">
                    No decks found matching that name.
                </div>
            }
            else if (ViewBag.SearchTag != null)
            {
                <div class="module">
                    <p>
                        <span class="icons">
                            &#xe93c;
                        </span>
                        <span class="half-tab"></span>
                        <span class="bold">
                            No available decks with that tag.
                        </span>
                    </p>
                    <p>
                        Other users may be using this tag for private decks.
                    </p>
                    <p>
                        You can add it to your own decks.
                    </p>
                </div>
            }
        }


        @if (userDecks)
        {
            <span class="icons white large-type">
                &#xe90e;
            </span>
            <span class="tab"></span>
            <h2 class="view-title deck-heading">
                Your decks
            </h2>
            <span class="tab"></span>
            <span class="bold white small-type nowrap">
                <span class="icons">
                    &#xe931;
                </span>
                Click below to view cards and edit
            </span>

            foreach (Deck deck in Model)
            {
                if (deck.UserID == userID)
                {
                    <div class="deck-listing">

                        @Html.ActionLink(deck.DeckName, "EditDeck", "Deck", new { deckID = deck.DeckID, newBackground = true }, new { @class = "deckname-listing bold" })

                        <div class="listing-section">
                            <span class="small-type">
                                @deck.Cards.Count cards
                            </span>
                        </div>
                        @if (deck.Cards.Count > 0)
                        {
                            <div class="listing-section">
                                <div class="listing-subsection">
                                    <span>Study:</span>
                                    <span class="tab"></span>
                                </div>
                                <div class="listing-subsection">
                                    <a href="@Url.Action("StudyBegin", "Deck", new { deckID = deck.DeckID, frontFirst = true })" class="btn main-btn">
                                        <span class="icons">
                                            &#xe915;&nbsp;
                                        </span>
                                        Front first
                                    </a>
                                    <a href="@Url.Action("StudyBegin", "Deck", new { deckID = deck.DeckID, frontFirst = false })" class="btn main-btn">
                                        <span class="icons">
                                            &#xe915;&nbsp;
                                        </span>
                                        Back first
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                }
            }
        }


        @if (publicDecks)
        {
            <span class="icons white large-type">
                &#xe90e;
            </span>
            <span class="tab"></span>
            <h2 class="view-title deck-heading">
                Public decks
            </h2>
            <span class="tab"></span>
            <span class="bold white small-type nowrap">
                <span class="icons">
                    &#xe931;
                </span>
                Click below to view cards
            </span>

            foreach (Deck deck in Model)
            {
                if (deck.UserID != userID)
                {
                    <div class="deck-listing">

                        @Html.ActionLink(@deck.DeckName, "ViewDeck", "Deck", new { deckID = deck.DeckID }, new { @class = "deckname-listing bold" })

                        <div class="listing-section">
                            <p class="small-type narrow-line">
                                @deck.Cards.Count cards
                            </p>
                            <p class="narrow-line">
                                <span class="small-type">Shared by</span>
                                <span class="bold">
                                    @deck.Creator.DisplayName
                                </span>
                            </p>
                        </div>

                        @if (deck.Cards.Count > 0)
                        {
                            <div class="listing-section">
                                <div class="listing-subsection">
                                    <span>Study:</span>
                                    <span class="tab"></span>
                                </div>
                                <div class="listing-subsection">
                                    <a href="@Url.Action("StudyBegin", "Deck", new { deckID = deck.DeckID, frontFirst = true })" class="btn main-btn">
                                        <span class="icons">
                                            &#xe915;&nbsp;
                                        </span>
                                        Front first
                                    </a>
                                    <a href="@Url.Action("StudyBegin", "Deck", new { deckID = deck.DeckID, frontFirst = false })" class="btn main-btn">
                                        <span class="icons">
                                            &#xe915;&nbsp;
                                        </span>
                                        Back first
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                }
            }
        }

    </div>
</div>


<script type="text/javascript" src="../../Content/deckScript.js"></script>

