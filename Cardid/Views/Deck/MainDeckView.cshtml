@using Cardid.Models
@model List<Deck>
@{
    ViewBag.Title = "MainDeckView";
    List<Tag> tagsByName = ViewBag.TagsByName;
    List<Tag> tagsByPopularity = ViewBag.TagsByPopularity;
    string userID = ViewBag.UserID;
    int counter = 0;
}



@if (ViewBag.SearchName != null)
{
    <h1 class="view-title">Search results for "@ViewBag.SearchName":</h1>
}

else if (ViewBag.SearchTag != null)
{
    <h1 class="view-title" : inline-block">
        Tag Search Results:
    </h1>
    <span class="tag active-tag">@ViewBag.SearchTag</span>
}

else
{
    <h1 class="view-title">All Decks</h1>
}


<div class="flex flex-baseline">
    <div class="deck-column">
        <div class="option">

            @Html.ActionLink("Create a new deck", "CreateDeckInit", "Deck", null, new { @class = "btn main-btn" })
        </div>

        <div class="option">

            @using (Html.BeginForm("SearchDeckNames", "Deck"))
            {
                <input type="text" name="searchString" />
                <button type="submit" class="btn main-btn">Search by deck name</button>
            }
        </div>

        <div class="option">
            <h4 class="bold">Search decks by tag</h4>

            <div class="tagviews">
                <p class="tagview-pop bold">sort by popularity</p>
                <p class="tagview-alph pointer">sort alphabetically</p>
            </div>

            <div class="tag-container">

                <div class="tags-pop">

                    @foreach (Tag tag in tagsByPopularity)
                    {
                        @Html.ActionLink(tag.TagName, "SearchDeckTags", "Deck", new { searchString = tag.TagName }, new { @class = "tag active-tag" });
                    }
                </div>

                <div class="tags-alph hidden">

                    @foreach (Tag tag in tagsByName)
                    {
                        @Html.ActionLink(tag.TagName, "SearchDeckTags", "Deck", new { searchString = tag.TagName }, new { @class = "tag active-tag" });
                    }
                </div>

            </div>
            @using (Html.BeginForm("CreateTag", "Deck"))
            {
                <input type="text" name="tagName" />
                <button type="submit" class="btn main-btn">Create a new tag</button>
            }

        </div>

    </div>

    <div class="deck-column">
        <div class="deck-list">
            <h2 class="view-title deck-heading">Your decks</h2>

            @if (Model.Count > 0)
            {

                foreach (Deck deck in Model)
                {
                    if (deck.UserID == userID)
                    {
                        counter++;
                        <div class="deck-listing">

                            @Html.ActionLink(@deck.DeckName, "EditDeck", "Deck", new { deckID = deck.DeckID }, new { @class = "deckname-listing" })

                            <div class="deck-info">
                                <span class="small-type">
                                    @deck.Cards().Count cards
                                </span>
                            </div>
                            @if (deck.Cards().Count > 0)
                            {
                                @Html.ActionLink("Study back -> front", "StudyBegin", "Deck", new { deckID = deck.DeckID, frontFirst = false }, new { @class = "btn main-btn float-right" })
                                @Html.ActionLink("Study front -> back", "StudyBegin", "Deck", new { deckID = deck.DeckID, frontFirst = true }, new { @class = "btn main-btn float-right" })
                            }
                        </div>
                    }
                }
                if (counter == 0)
                {
                    if (ViewBag.SearchName != null)
                    {
                        <div class="deck-listing">
                            No decks matching that name.
                        </div>
                    }
                    else if (ViewBag.SearchTag != null)
                    {
                        <div class="deck-listing">
                            No decks with that tag.
                        </div>
                    }
                    else
                    {
                        <div class="deck-listing">
                            <span>You don't have any decks yet...</span>
                            @Html.ActionLink("Create one here!", "CreateDeckInit", "Deck", null, new { @class = "btn main-btn float-right" })
                        </div>
                    }
                }
            }
            else
            {
                if (ViewBag.SearchName != null)
                {
                    <div class="deck-listing">
                        No decks matching that name.
                    </div>
                }
                else if (ViewBag.SearchTag != null)
                {
                    <div class="deck-listing">
                        No decks with that tag.
                    </div>
                }
            }
        </div>


        <div class="deck-list">
            <h2 class="view-title deck-heading">Public decks</h2>

            @if (Model.Count > 0)
            {

                counter = 0;
                foreach (Deck deck in Model)
                {
                    if (deck.UserID != userID)
                    {
                        counter++;
                        <div class="deck-listing">

                            @Html.ActionLink(@deck.DeckName, "CardsInDeck", "Deck", new { deckID = deck.DeckID }, new { @class = "deckname-listing" })

                            <div class="deck-info">
                                <p class="small-type narrow-line">
                                    @deck.Cards().Count cards
                                </p>
                                <p class="narrow-line">
                                    <span class="small-type">Shared by</span> @deck.Creator().DisplayName
                                </p>
                            </div>

                            @if (deck.Cards().Count > 0)
                            {
                                <div>
                                    @Html.ActionLink("Study Back->Front", "StudyBegin", "Deck", new { deckID = deck.DeckID, frontFirst = false }, new { @class = "btn main-btn float-right" })
                                    @Html.ActionLink("Study Front->Back", "StudyBegin", "Deck", new { deckID = deck.DeckID, frontFirst = true }, new { @class = "btn main-btn float-right" })
                                </div>
                            }
                        </div>
                    }
                }
                if (counter == 0)
                {
                    if (ViewBag.SearchName != null)
                    {
                        <div class="deck-listing">
                            No public decks matching that name.
                        </div>
                    }
                    else if (ViewBag.SearchTag != null)
                    {
                        <div class="deck-listing">
                            No public decks with that tag.
                        </div>
                    }
                }
            }
            else
            {
                if (ViewBag.SearchName != null)
                {
                    <div class="deck-listing">
                        No public decks matching that name.
                    </div>
                }
                else if (ViewBag.SearchTag != null)
                {
                    <div class="deck-listing">
                        No public decks with that tag.
                    </div>
                }
            }
        </div>
    </div>
</div>




<script type="text/javascript" src="../../Content/deckTags.js"></script>
